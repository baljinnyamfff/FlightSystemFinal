[
  {
    "ContainingType": "FlightSystemServer.Controllers.BoardingPassesController",
    "Method": "GetAll",
    "RelativePath": "api/BoardingPasses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.BoardingPassesController",
    "Method": "GetById",
    "RelativePath": "api/BoardingPasses/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.CheckInController",
    "Method": "AssignSeat",
    "RelativePath": "api/CheckIn/assign-seat",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "passengerId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "seatId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.CheckInController",
    "Method": "CheckIn",
    "RelativePath": "api/CheckIn/check-in",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "passengerId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "seatId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.CheckInController",
    "Method": "SearchPassenger",
    "RelativePath": "api/CheckIn/search-passenger",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "passportNumber",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.FlightsController",
    "Method": "GetAll",
    "RelativePath": "api/Flights",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.FlightsController",
    "Method": "GetById",
    "RelativePath": "api/Flights/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.FlightsController",
    "Method": "UpdateStatus",
    "RelativePath": "api/Flights/{id}/status",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "newStatus",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.PassengersController",
    "Method": "GetAll",
    "RelativePath": "api/Passengers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.PassengersController",
    "Method": "GetById",
    "RelativePath": "api/Passengers/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.SeatsController",
    "Method": "GetAll",
    "RelativePath": "api/Seats",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystemServer.Controllers.SeatsController",
    "Method": "GetById",
    "RelativePath": "api/Seats/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightCheckInServer.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightCheckInServer.WeatherForecast, FlightSystemServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]